Main game, before cart edition:

$2000 - Tensor logo graphics

$2DC0 - Music

$3D3C - Data (LUTs, strings, etc.) - (carefully calculated so that the section following it ends at $4FFF)

$4777 - Tensor logo graphics PMG data

$5000 - Title screen DL (aligned!)

$508A - Main code section (starts with Tensor logo raster program)

$557F - Tensor code

$59D4 - Margin LUTs and PMG data for adding colors to margin

$5BCE - Tensor code continues

$5E87 - Map rotation code unrolled (until $657A, for a total of 1779 bytes)

$657A - Tensor code continues

$6B30 - Intermission DL + Final intermission DL

... Some free space

$7000 - PMG data

$7400 - Screen buffers

... Some free space

$7800 - Fonts (title, game, game2, digits, credits)

$9000 - RMT player

$94EF - Map data (until $B07F, for a total of ~7kb)

$B10F - Margin data

$B207 - DLI routines + auxiliary code

$B400 - Data for the credits line on title screen






Main changes to cart edition:

* 4 fonts are moved under the OS to $C000
* Map data moved under the OS to $D800-$F4B0
* Hi-Score list (80 entries, 8 bytes each) at $F4B1-$F731
* 5th font is moved under the OS at $FBF9-$FFF9
* Free mem under OS: $F732-$FBF8 (~1.2kb)



Detailed structure of the "under OS" memory:

First block:

* $C000 - Credits font
* $C1AD - Title font
* $C3EC - Game font
* $C5D5 - Digits font
* $C86E - Game font 2
* $CA59 - Polish level names
* ...142 bytes free

Second block:

* $B800 - 51 compressed maps
* $EA12 - English level names
* $???? - Sprite data for intermission decoration





--- Save data structure

  1 byte  : Save slot occupied indicator ($07)
  8 bytes : Level completion bits (64 levels in total, 1 bit per level)
768 bytes : High-scores (64 records, 2 bytes for score, 10 bytes for name)
  1 byte  : instafall
  1 byte  : rotation_speed
  1 byte  : language

Total: 780 bytes

10 entries per cartridge block (7800 bytes)

80 entries per memory sector (8 banks)